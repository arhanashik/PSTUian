apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion target_sdk
    defaultConfig {
        applicationId 'com.workfort.pstuian'
        minSdkVersion min_sdk
        targetSdkVersion target_sdk
        versionName version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$constraint"
    // reading and writing Exif tags in a JPEG file or a RAW image file
    implementation "androidx.exifinterface:exifinterface:$exifinterface"
    //instead of support v4
    implementation "androidx.legacy:legacy-support-v4:$support"
    //instead of support design
    implementation "com.google.android.material:material:$material"

    //room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    // Lifecycle only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"
    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle"

    //recycler + card
    implementation "androidx.cardview:cardview:$cardview"
    implementation "androidx.recyclerview:recyclerview:$recyclerview"

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    //multiDex
    implementation "androidx.multidex:multidex:$multidex"
}

//3rd party
dependencies {
    // dependency injection
    implementation "io.insert-koin:koin-core:$koin"

    // circle image
    implementation "com.mikhaellopez:circularimageview:$circularimageview"

    //image loader
    implementation "io.coil-kt:coil:$coil"
    implementation "com.github.bumptech.glide:glide:$glide"

    //rx
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin"

    //networking lib
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"

    //logger
    implementation "com.jakewharton.timber:timber:$timber"

    //animation on text
    implementation "com.hanks:htextview-base:$htextview_version"
    //available: line, fade, rainbow, typer, scale, evaporate, fall
    implementation "com.hanks:htextview-line:$htextview_version"

    //image slider
    implementation "com.github.smarteist:autoimageslider:$autoimageslider"
}

//testing libs
dependencies {
    // Koin(dependency injector) testing
    testImplementation "io.insert-koin:koin-test:$koin"

    testImplementation "junit:junit:$rootProject.junit"
    androidTestImplementation "androidx.test:runner:$rootProject.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso"
}
